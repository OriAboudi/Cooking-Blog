{"version":3,"file":"static/js/247.43bf9798.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/20/solid/esm/LockClosedIcon.js","components/pages/userCMS/login.jsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction LockClosedIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(LockClosedIcon);\nexport default ForwardRef;","import React, { useContext } from 'react'\n\nimport { LockClosedIcon } from '@heroicons/react/20/solid'\nimport { FaUser } from 'react-icons/fa'\nimport { useForm } from 'react-hook-form'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useState } from 'react'\nimport { MyUsers } from '../../../context/userContext'\nimport { LOGIN_URL, TOKEN_KEY } from '../../../constant/constant'\nimport { apiPost } from '../../../services/services'\n\n\n\nfunction Login() {\n    const { getUser } = MyUsers()\n    const nav = useNavigate();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { register, handleSubmit, formState: { errors } } = useForm()\n\n    const emailReg = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n\n    const onSub = (data) => {\n        console.log(data);\n        login(data)\n\n    }\n    const login = async (body) => {\n\n        try {\n            setLoading(true);\n            const { data } = await apiPost(LOGIN_URL, body)\n            console.log(data);\n\n            setTimeout(() => {\n                if (data.token) {\n                    localStorage.setItem(TOKEN_KEY, data.token)\n                    if (data.role == 'admin') {\n                        nav('/admin')\n                    } else {\n                        nav('/')\n                    }\n                }\n                if (localStorage.getItem(TOKEN_KEY)) {\n                    getUser()\n                }\n                setLoading(false)\n\n            }, 1000)\n\n        } catch (err) {\n            if (err.response.data.arr_msg) {\n                setError(err.response.data.arr_msg);\n            }\n            setLoading(false);\n        }\n\n    }\n\n\n\n\n\n    return (\n        <div style={{minHeight:\"100vh\"}} className=\"flex min-h-full items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"w-full max-w-md space-y-8 mt-[-100px]\">\n                <div className='flex flex-col justify-center'>\n                    <FaUser className=' h-8 w-auto lg:block \" ' color='black' size={'30px'} />\n                    {/* <img\n                        className=\"mx-auto h-12 w-auto\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n                        alt=\"Your Company\"\n                    /> */}\n                    <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\n                        Login to your account\n                    </h2>\n\n                </div>\n                <form onSubmit={handleSubmit(onSub)} className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n                    <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                    <div className=\"-space-y-px rounded-md  \">\n                        <div className='mb-4'>\n                            <label htmlFor=\"email-address\" className=\"sr-only\">\n                                Email address\n                            </label>\n                            <input\n\n\n                                className=\"relative block w-full appearance-none  rounded-lg border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n                                placeholder=\"Email address\"\n                                {...register('email', { required: { value: true, message: \"Email is requierd\" }, minLength: { value: 3, message: 'minimum 3 characters' }, maxLength: { value: 100, message: \"Maximum 100 characters\" }, pattern: { value: emailReg, message: \"Email invalid\" } })}\n                            />\n                            {errors.email && <p className='text-red-600'>{errors.email.message}</p>}\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"sr-only\">\n                                Password\n                            </label>\n                            <input\n\n                                type=\"password\"\n\n                                className=\"relative block w-full appearance-none  rounded-lg border  border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n                                placeholder=\"Password\"\n                                {...register('password', { required: { value: true, message: \"password is required\" }, minLength: { value: 3, message: \"minimum 3 characters!\" }, maxLength: { value: 20, message: \"maximum 20 characters!\" } })}\n                            />\n                            {errors.password && <p className='text-red-600'>{errors.password.message}</p>}\n                        </div>\n                    </div>\n                    {loading && error ? <div className=\"flex items-center\">\n                        <img style={{ position: 'absolute', zIndex: '-1' }} width={'80px'} src='https://media4.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=ecf05e47nogttyy9l1kfcz2ckyo2oot6pkp8dhvia62f9euw&rid=giphy.gif&ct=g' />\n                    </div> :\n                        <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center\">\n                                <input\n                                    id=\"remember-me\"\n                                    name=\"remember-me\"\n                                    type=\"checkbox\"\n                                    className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                                />\n                                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                                    Remember me\n                                </label>\n                            </div>\n\n                            <div className=\"text-sm\">\n                                <Link to={\"/users/forgotPassword\"} className=\"font-medium text-bg-gray-800 hover:text-bg-gray-800\">\n                                    Forgot your password?\n                                </Link>\n                            </div>\n                        </div>\n                    }\n                    {/* check the state error and setError */}\n\n                    {error && <p className='text-red-600'>{error}! </p>}\n                    <div>\n                        <button\n                            type=\"submit\"\n                            className=\"group relative flex w-full justify-center rounded-md border border-transparent bg-gray-800 py-2 px-4 text-sm font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                        >\n                            <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n                                <LockClosedIcon className=\"h-5 w-5 text-bg-gray-800 group-hover:text-bg-gray-700\" aria-hidden=\"true\" />\n                            </span>\n                            Sign in\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Login"],"names":["React","svgRef","title","titleId","props","Object","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","getUser","MyUsers","nav","useNavigate","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","errors","formState","login","body","apiPost","LOGIN_URL","data","console","log","setTimeout","token","localStorage","setItem","TOKEN_KEY","role","getItem","response","arr_msg","style","minHeight","className","color","size","onSubmit","action","method","type","name","defaultValue","htmlFor","placeholder","required","value","message","minLength","maxLength","pattern","email","password","position","zIndex","width","src","to"],"sourceRoot":""}